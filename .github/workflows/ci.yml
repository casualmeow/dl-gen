name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backendv2-python:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backendv2
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests
        run: |
          # Add your test command here, e.g. pytest or similar
          echo "No tests defined for backendv2"

  backend-java:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build with sbt
        run: sbt clean assembly

  backendv3-kotlin:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backendv3
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build fat JAR
        run: ./gradlew buildFatJar

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Lint and test
        run: |
          npm run lint:all
          npm run test
      - name: Build
        run: npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: [backendv2-python, backend-java, backendv3-kotlin, frontend]
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker images
        run: |
          docker build -t backendv2 ./backendv2
          docker build -t backendv3 ./backendv3
          docker build -t backend ./backend
          docker build -t frontend ./frontend